var documenterSearchIndex = {"docs":
[{"location":"getting-started/installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"getting-started/installation/","page":"Installation","title":"Installation","text":"Eventually, PrimaryCensored is likely to be added to the Julia registry. Until then, you can install it from this repository by running the following command in the Julia REPL:","category":"page"},{"location":"getting-started/installation/","page":"Installation","title":"Installation","text":"using Pkg; Pkg.add(url=\"https://github.com/epinowcast/PrimaryCensored.jl\")","category":"page"},{"location":"lib/internals/#Internal-Documentation","page":"Internal API","title":"Internal Documentation","text":"","category":"section"},{"location":"lib/internals/","page":"Internal API","title":"Internal API","text":"Documentation for PrimaryCensored.jl's internal interface.","category":"page"},{"location":"lib/internals/#Contents","page":"Internal API","title":"Contents","text":"","category":"section"},{"location":"lib/internals/","page":"Internal API","title":"Internal API","text":"Pages = [\"internals.md\"]\nDepth = 2:2","category":"page"},{"location":"lib/internals/#Index","page":"Internal API","title":"Index","text":"","category":"section"},{"location":"lib/internals/","page":"Internal API","title":"Internal API","text":"Pages = [\"internals.md\"]","category":"page"},{"location":"lib/internals/#Internal-API","page":"Internal API","title":"Internal API","text":"","category":"section"},{"location":"lib/internals/","page":"Internal API","title":"Internal API","text":"Modules = [PrimaryCensored]\nPublic = false","category":"page"},{"location":"lib/internals/#PrimaryCensored.PrimaryCensoredDist","page":"Internal API","title":"PrimaryCensored.PrimaryCensoredDist","text":"struct PrimaryCensoredDist{D1<:(Distributions.UnivariateDistribution), D2<:(Distributions.UnivariateDistribution)} <: Distributions.UnivariateDistribution{Distributions.ValueSupport}\n\nGeneric wrapper for a primary event censored distribution.\n\nContructors\n\nPrimaryCensoredDist(; uncensored::D, censoring::D): Constructs a PrimaryCensoredDist distribution with the specified uncensored and censoring distributions.\n\nExamples\n\nusing PrimaryCensored, Distributions\n\nuncensored = Normal()\ncensoring = Uniform(0, 1)\n\nd = primarycensored(uncensored, censoring)\n\nrand(d)\n\n\n\nFields\n\nuncensored::Distributions.UnivariateDistribution: The original (uncensored) distribution.\ncensoring::Distributions.UnivariateDistribution: The primary event censoring distribution.\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/#PrimaryCensored.WithinIntervalCensored","page":"Internal API","title":"PrimaryCensored.WithinIntervalCensored","text":"struct WithinIntervalCensored{D<:(Distributions.UnivariateDistribution), L<:Real, U<:Real} <: Distributions.UnivariateDistribution{Distributions.ValueSupport}\n\nImplement a censoring function.\n\nTakes a UnivariateDistribution and returns a WithinIntervalCensored object but depends only on the cdf method.\n\nArguments\n\ndist the truncated primarycensored distribution\nlower the lower bound of the interval\nupper the upper bound of the interval\n\nReturns\n\nWithinIntervalCensored object\n\n\n\nFields\n\ndist::Distributions.UnivariateDistribution\nlower::Real\nupper::Real\n\n\n\n\n\n","category":"type"},{"location":"lib/internals/#Base.rand-Tuple{Random.AbstractRNG, PrimaryCensored.WithinIntervalCensored}","page":"Internal API","title":"Base.rand","text":"rand(\n    rng::Random.AbstractRNG,\n    d::PrimaryCensored.WithinIntervalCensored\n) -> Any\n\n\nGenerate a random sample from a within-interval censored distribution.\n\nArguments\n\nrng: Random number generator\nd: WithinIntervalCensored distribution object\n\nReturns\n\nA random sample from the within-interval censored distribution\n\nExamples\n\nusing PrimaryCensored, Distributions\nd = truncated(Normal(5,2), 0, 5)\ntrunc_d = within_interval_censored(d, 2, 4)\nrand(trunc_d)\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#Distributions.logpdf-Tuple{PrimaryCensored.WithinIntervalCensored}","page":"Internal API","title":"Distributions.logpdf","text":"logpdf(d::PrimaryCensored.WithinIntervalCensored) -> Any\n\n\nReturning a within interval censored logpdf\n\nArguments\n\nd an WithinIntervalCensoredDist object\n\nReturns\n\ndiscretized log probability mass function\n\nExamples\n\nusing PrimaryCensored, Distributions\nd = truncated(Normal(5,2), 0, 5)\ntrunc_d = within_interval_censored(d, 2, 4)\nlogpdf(trunc_d)\nrand(trunc_d)\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#PrimaryCensored._check_and_give_ts-Tuple{PrimaryCensored.PrimaryCensoredDist, Any, Any, Any}","page":"Internal API","title":"PrimaryCensored._check_and_give_ts","text":"_check_and_give_ts(\n    dist::PrimaryCensored.PrimaryCensoredDist,\n    Δd,\n    D,\n    upper\n) -> Any\n\n\nInternal function to check censored_pmf arguments and return the time steps of the rightmost limits of the censor intervals.\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#Public-Documentation","page":"Public API","title":"Public Documentation","text":"","category":"section"},{"location":"lib/public/","page":"Public API","title":"Public API","text":"Documentation for PrimaryCensored.jl's public interface.","category":"page"},{"location":"lib/public/","page":"Public API","title":"Public API","text":"See the Internals section of the manual for internal package docs covering all submodules.","category":"page"},{"location":"lib/public/#Contents","page":"Public API","title":"Contents","text":"","category":"section"},{"location":"lib/public/","page":"Public API","title":"Public API","text":"Pages = [\"public.md\"]\nDepth = 2:2","category":"page"},{"location":"lib/public/#Index","page":"Public API","title":"Index","text":"","category":"section"},{"location":"lib/public/","page":"Public API","title":"Public API","text":"Pages = [\"public.md\"]","category":"page"},{"location":"lib/public/#Public-API","page":"Public API","title":"Public API","text":"","category":"section"},{"location":"lib/public/","page":"Public API","title":"Public API","text":"Modules = [PrimaryCensored]\nPrivate = false","category":"page"},{"location":"lib/public/#PrimaryCensored.censored_cdf-Tuple{PrimaryCensored.PrimaryCensoredDist}","page":"Public API","title":"PrimaryCensored.censored_cdf","text":"censored_cdf(\n    dist::PrimaryCensored.PrimaryCensoredDist;\n    Δd,\n    D,\n    upper\n) -> Any\n\n\nCreate a discrete probability cumulative distribution function (CDF) from a given PrimaryCensoredDist, specialized for the case where all observsations are censored into disjoint intervals of width Δd. A canonical example of this would be daily or weekly reporting.\n\nNB: censored_cdf returns the non-truncated CDF, i.e. the CDF without conditioning on the secondary event occuring either before or after some time. Truncation can be applied by conditioning.\n\nArguments\n\ndist: The PrimaryCensoredDist distribution from which to evaluate the CDF.\nΔd: The step size for discretizing the domain. Default is 1.0.\nD: The upper bound of the domain. Must be greater than Δd. Default D = nothing\n\nindicates that the coverage of the distribution returned at its upperth percentile, _if the delay started at the beginning of its primary interval rounded to nearest multiple of Δd.\n\nReturns\n\nA vector representing the CDF with 0.0 appended at the beginning.\n\nRaises\n\nAssertionError if the minimum value of dist is negative.\nAssertionError if Δd is not positive.\nAssertionError if D is shorter than Δd.\nAssertionError if D is not a multiple of Δd.\n\nExamples\n\nusing PrimaryCensored, Distributions\n\ndist = primarycensored(Exponential(1.0), Uniform(0, 1))\n\ncensored_cdf(dist; D = 10) |>\n    p -> round.(p, digits=3)\n\n# output\n11-element Vector{Float64}:\n 0.0\n 0.368\n 0.767\n 0.914\n 0.969\n 0.988\n 0.996\n 0.998\n 0.999\n 1.0\n 1.0\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#PrimaryCensored.censored_pmf-Tuple{PrimaryCensored.PrimaryCensoredDist}","page":"Public API","title":"PrimaryCensored.censored_pmf","text":"censored_pmf(\n    dist::PrimaryCensored.PrimaryCensoredDist;\n    Δd,\n    D,\n    upper\n) -> Any\n\n\nCreate a discrete probability probability mass function (PMF) from a given PrimaryCensoredDist, specialized for the case where all observsations are censored into disjoint intervals of width Δd. A canonical example of this would be daily or weekly reporting.\n\nNB: censored_pmf returns the non-truncated PMF, i.e. the PMF without conditioning on the secondary event occuring either before or after some time. Truncation can be applied by conditioning.\n\nArguments\n\ndist: The PrimaryCensoredDist distribution from which to evaluate the CDF.\nΔd: The step size for discretizing the domain. Default is 1.0.\nD: The upper bound of the domain. Must be greater than Δd. Default D = nothing\n\nindicates that the coverage of the distribution returned at its upperth percentile, _if the delay started at the beginning of its primary interval rounded to nearest multiple of Δd.\n\nReturns\n\nA vector representing the CDF with 0.0 appended at the beginning.\n\nRaises\n\nAssertionError if the minimum value of dist is negative.\nAssertionError if Δd is not positive.\nAssertionError if D is shorter than Δd.\nAssertionError if D is not a multiple of Δd.\n\nExamples\n\nusing PrimaryCensored, Distributions\n\ndist = primarycensored(Exponential(1.0), Uniform(0, 1))\n\ncensored_pmf(dist; D = 10) |>\n    p -> round.(p, digits=3)\n\n# output\n10-element Vector{Float64}:\n 0.368\n 0.4\n 0.147\n 0.054\n 0.02\n 0.007\n 0.003\n 0.001\n 0.0\n 0.0\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#PrimaryCensored.primarycensored-Tuple{Distributions.UnivariateDistribution, Distributions.UnivariateDistribution}","page":"Public API","title":"PrimaryCensored.primarycensored","text":"primarycensored(\n    uncensored::Distributions.UnivariateDistribution,\n    censoring::Distributions.UnivariateDistribution\n) -> PrimaryCensored.PrimaryCensoredDist\n\n\nConstructs a `PrimaryCensoredDist` distribution with the specified uncensored and censoring distributions.\n\n# Arguments\n- `uncensored::D`: The uncensored distribution.\n- `censoring::D`: The primary censoring distribution.\n\n# Returns\n- A `PrimaryCensored` distribution.\n\n# Examples\n```@example\nusing PrimaryCensored, Distributions\n\nuncensored = Normal(4, 1)\ncensoring = Uniform(0, 1)\n\nd = primarycensored(uncensored, censoring)\n\nrand(d, 10)\n\nx = 0:10\ncdf.(d, x)\n```\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#PrimaryCensored.within_interval_censored-Tuple{Distributions.UnivariateDistribution, Real, Real}","page":"Public API","title":"PrimaryCensored.within_interval_censored","text":"within_interval_censored(\n    dist::Distributions.UnivariateDistribution,\n    lower::Real,\n    upper::Real\n) -> PrimaryCensored.WithinIntervalCensored\n\n\nGeneric wrapper for within window censored an object\n\nContructors\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#PrimaryCensored.within_interval_logpmf-Tuple{Distributions.UnivariateDistribution, Real, Real}","page":"Public API","title":"PrimaryCensored.within_interval_logpmf","text":"within_interval_logpmf(\n    dist::Distributions.UnivariateDistribution,\n    lower::Real,\n    upper::Real\n) -> Any\n\n\nCalculate the log probability mass function (log(PMF)) of a univariate distribution dist having a value in the interval [lower, upper].\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#PrimaryCensored.within_interval_pmf-Tuple{Distributions.UnivariateDistribution, Real, Real}","page":"Public API","title":"PrimaryCensored.within_interval_pmf","text":"within_interval_pmf(\n    dist::Distributions.UnivariateDistribution,\n    lower::Real,\n    upper::Real\n) -> Any\n\n\nCalculate the probability mass function (PMF) of a univariate distribution dist having a value in the interval [lower, upper].\n\n\n\n\n\n","category":"method"},{"location":"lib/public/#PrimaryCensored.within_interval_rand-Tuple{Random.AbstractRNG, Distributions.UnivariateDistribution, Real}","page":"Public API","title":"PrimaryCensored.within_interval_rand","text":"within_interval_rand(\n    rng::Random.AbstractRNG,\n    d::Distributions.UnivariateDistribution,\n    swindow::Real\n) -> Any\n\n\nGenerate a random value from a univariate distribution d but only return the value within an interval of size swindow.\n\n\n\n\n\n","category":"method"},{"location":"developer/#developer","page":"Overview","title":"Developer documentation","text":"","category":"section"},{"location":"developer/","page":"Overview","title":"Overview","text":"Welcome to the PrimaryCensored developer documentation! This section is designed to help you get started with developing the package.","category":"page"},{"location":"getting-started/quickstart/#Quickstart","page":"Quickstart","title":"Quickstart","text":"","category":"section"},{"location":"getting-started/quickstart/","page":"Quickstart","title":"Quickstart","text":"Get up and running with PrimaryCensored in just a few minutes using this quickstart guide.","category":"page"},{"location":"release-notes/","page":"Release notes","title":"Release notes","text":"EditURL = \"https://github.com/JuliaDocs/Documenter.jl/blob/master/CHANGELOG.md\"","category":"page"},{"location":"release-notes/#Release-notes","page":"Release notes","title":"Release notes","text":"","category":"section"},{"location":"release-notes/","page":"Release notes","title":"Release notes","text":"The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.","category":"page"},{"location":"release-notes/#Unreleased","page":"Release notes","title":"Unreleased","text":"","category":"section"},{"location":"release-notes/#Added","page":"Release notes","title":"Added","text":"","category":"section"},{"location":"release-notes/#Changed","page":"Release notes","title":"Changed","text":"","category":"section"},{"location":"release-notes/#Fixed","page":"Release notes","title":"Fixed","text":"","category":"section"},{"location":"getting-started/explainers/#Explainers","page":"Overview","title":"Explainers","text":"","category":"section"},{"location":"getting-started/explainers/","page":"Overview","title":"Overview","text":"This section contains a series of explainers that provide a detailed overview of the PrimaryCensored platform and its features. These explainers are designed to help you understand the platform and its capabilities, and to provide you with the information you need to get started using PrimaryCensored. See the sidebar for the list of explainers.","category":"page"},{"location":"getting-started/#getting-started","page":"Overview","title":"Getting started","text":"","category":"section"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"Note that this section of the documentation is still under construction. Please see replications for the most up-to-date information. Please feel free to contribute to the documentation by submitting a pull request.","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"Welcome to the PrimaryCensored documentation! This section is designed to help you get started with the package. It includes a frequently asked questions (FAQ) section, a series of explainers that provide a detailed overview of the platform and its features, and tutorials that will help you get started with PrimaryCensored for specific tasks. See the sidebar for the list of topics.","category":"page"},{"location":"getting-started/#Introduction-to-the-problem","page":"Overview","title":"Introduction to the problem","text":"","category":"section"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"Delay distributions play a crucial role in various fields, including epidemiology, reliability analysis, and survival analysis.","category":"page"},{"location":"getting-started/#Loading-the-packages","page":"Overview","title":"Loading the packages","text":"","category":"section"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"# Import the package\nusing PrimaryCensored\nusing Distributions\nusing Random\nusing Plots\n\n# Set the seed for reproducibility\nRandom.seed!(123)\n","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"Now we can set up the problem as described here.","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"n = 1e4\nmeanlog = 1.5\nsdlog = 0.75\nobs_time = 10\npwindow = 1\n\n# generate the distributions\n\nprimary_distribution = Uniform(1, 2)\ndelay_distribution = LogNormal(meanlog, sdlog)\n","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"Now we can generate our primarycensoreddist object","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"\nprim_dist = primarycensoreddist(primary_distribution, delay_distribution)\n","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"We can then apply the truncation.","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"\ntrunc_prime_dist = truncated(prim_dist, 1, 2)\n","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"And then we can apply our within interval censoring approach:","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"int_censored_dist = within_interval_censored(trunc_prime_dist, 2, 4)\n\nhist(rand(int_censored_dist, 1000))\n","category":"page"},{"location":"getting-started/#Contributing","page":"Overview","title":"Contributing","text":"","category":"section"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"We welcome contributions and new contributors! We particularly appreciate help on identifying and identified issues. Please check and add to the issues, and/or add a pull request and see our contributing guide for more information.","category":"page"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"If you need a different underlying model for your work: primarycensoreddist provides a flexible framework for censored distributions in Julia, the language of the future. The future the is now.","category":"page"},{"location":"getting-started/#Code-of-Conduct","page":"Overview","title":"Code of Conduct","text":"","category":"section"},{"location":"getting-started/","page":"Overview","title":"Overview","text":"Please note that the primarycensoreddist project is released with a Contributor Code of Conduct. By contributing to this project, you agree to abide by its terms.","category":"page"},{"location":"lib/#api-reference","page":"Overview","title":"API reference","text":"","category":"section"},{"location":"lib/","page":"Overview","title":"Overview","text":"Welcome to the PrimaryCensored API reference! This section is designed to help you understand the API of the package which is split into submodules.","category":"page"},{"location":"lib/","page":"Overview","title":"Overview","text":"The PrimaryCensored package itself contains no functions or types. Instead, it re-exports the functions and types from its submodules. See the sidebar for the list of submodules.","category":"page"},{"location":"getting-started/tutorials/fitting-dists-with-Turing/","page":"Fitting distributions with PrimaryCensored and Turing","title":"Fitting distributions with PrimaryCensored and Turing","text":"<style>\n    #documenter-page table {\n        display: table !important;\n        margin: 2rem auto !important;\n        border-top: 2pt solid rgba(0,0,0,0.2);\n        border-bottom: 2pt solid rgba(0,0,0,0.2);\n    }\n\n    #documenter-page pre, #documenter-page div {\n        margin-top: 1.4rem !important;\n        margin-bottom: 1.4rem !important;\n    }\n\n    .code-output {\n        padding: 0.7rem 0.5rem !important;\n    }\n\n    .admonition-body {\n        padding: 0em 1.25em !important;\n    }\n</style>\n\n<!-- PlutoStaticHTML.Begin -->\n<!--\n    # This information is used for caching.\n    [PlutoStaticHTML.State]\n    input_sha = \"2e6dc2802fd13815b59ac3899fbe487d0bc0154580cdb14a03af01cd2fce860a\"\n    julia_version = \"1.11.1\"\n-->\n\n<div class=\"markdown\"><h1>Fitting distributions using PrimaryCensored.jl and Turing.jl</h1><h2>Introduction</h2><h3>What are we going to do in this exercise</h3><p>We'll demonstrate how to use <code>PrimaryCensored.jl</code> in conjunction with Turing.jl for Bayesian inference of epidemiological delay distributions. We'll cover the following key points:</p><ol><li><p>Simulating censored delay distribution data</p></li><li><p>Fitting a naive model using Turing.jl</p></li><li><p>Evaluating the naive model's performance</p></li><li><p>Fitting an improved model using <code>PrimaryCensored.jl</code> functionality</p></li><li><p>Comparing the <code>PrimaryCensored.jl</code> model's performance to the naive model</p></li></ol><h2>What might I need to know before starting</h2><p>This vignette builds on the concepts introduced in the <a href=\"FIXME.html\">Getting Started with PrimaryCensored.jl</a> vignette and assumes familiarity with using Turing.jl.</p><h2>Packages used</h2><p>We use CairoMakie for plotting, Turing for probabilistic programming, and the <em>classics</em> DataFrames, Random, StatsBase (for the ecdf function). We install the PrimaryCensored.jl packages from the github repo.</p></div>\n\n\n\n\n<pre class='language-julia'><code class='language-julia'>begin\n    using DataFramesMeta\n    using Turing\n    using Distributions\n    using Random\n    using CairoMakie, PairPlots\n    using StatsBase\n    using PrimaryCensored\nend</code></pre>\n\n\n\n<div class=\"markdown\"><h1>Simulating censored and truncated delay distribution data</h1><p>We'll start by simulating some censored and truncated delay distribution data. We'll use the <code>primarycensored</code> function.</p></div>\n\n<pre class='language-julia'><code class='language-julia'>Random.seed!(123) # Set seed for reproducibility</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-hash508741\">TaskLocalRNG()</pre>\n\n\n<div class=\"markdown\"><p>Define the parameters for the simulation</p></div>\n\n<pre class='language-julia'><code class='language-julia'>n = 2000</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-n\">2000</pre>\n\n<pre class='language-julia'><code class='language-julia'>meanlog = 1.5</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-meanlog\">1.5</pre>\n\n<pre class='language-julia'><code class='language-julia'>sdlog = 0.75</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-sdlog\">0.75</pre>\n\n<pre class='language-julia'><code class='language-julia'>true_dist = LogNormal(meanlog, sdlog)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-true_dist\">Distributions.LogNormal{Float64}(μ=1.5, σ=0.75)</pre>\n\n\n<div class=\"markdown\"><p>we generate varying pwindow, swindow, and obs_time lengths</p></div>\n\n<pre class='language-julia'><code class='language-julia'>pwindows = rand(1:2, n)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-pwindows\">2000-element Vector{Int64}:\n 2\n 2\n 2\n 1\n 2\n 1\n 1\n ⋮\n 1\n 2\n 1\n 2\n 2\n 2</pre>\n\n<pre class='language-julia'><code class='language-julia'>swindows = rand(1:2, n)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-swindows\">2000-element Vector{Int64}:\n 1\n 2\n 2\n 1\n 2\n 1\n 1\n ⋮\n 2\n 2\n 2\n 1\n 1\n 2</pre>\n\n<pre class='language-julia'><code class='language-julia'>obs_times = rand(8:10, n)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-obs_times\">2000-element Vector{Int64}:\n 10\n  9\n  9\n 10\n  9\n  8\n  8\n  ⋮\n  8\n  9\n  9\n 10\n  8\n  8</pre>\n\n\n<div class=\"markdown\"><p>Let's generates all the <span class=\"tex\">\\(n\\)</span> samples by recreating the primary censored sampling function from <code>primarycensoreddist</code>, c.f. documentation <a href=\"https://primarycensoreddist.epinowcast.org/reference/rprimarycensoreddist.html\">here</a>. In our usage with use the <code>within_interval_rand</code> function which censors the <code>rand</code> return of a distribution onto a secondary censoring interval of specified width.</p></div>\n\n<pre class='language-julia'><code class='language-julia'>samples = map(pwindows, swindows, obs_times) do pw, sw, ot\n    cens_dist = primarycensored(true_dist, Uniform(0.0, pw)) |&gt;\n                d -&gt; ot &lt; Inf ? truncated(d; upper = ot) : d\n    within_interval_rand(cens_dist, sw)\nend</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-samples\">2000-element Vector{Float64}:\n 4.0\n 2.0\n 2.0\n 2.0\n 4.0\n 3.0\n 6.0\n ⋮\n 4.0\n 6.0\n 2.0\n 6.0\n 4.0\n 4.0</pre>\n\n\n<div class=\"markdown\"><p>Create a dataframe with the data we just generated aggregated to unique combinations and count occurrences.</p></div>\n\n<pre class='language-julia'><code class='language-julia'>delay_counts = mapreduce(vcat, pwindows, swindows, obs_times, samples) do pw, sw, ot, s\n    DataFrame(\n        pwindow = pw,\n        swindow = sw,\n        obs_time = ot,\n        observed_delay = s,\n        observed_delay_upper = s + sw\n    )\nend |&gt;\n               df -&gt; @groupby(df, :pwindow, :swindow, :obs_time, :observed_delay,\n    :observed_delay_upper) |&gt;\n                     gd -&gt; @combine(gd, :n=length(:pwindow))</code></pre>\n<table><tbody><tr><th></th><th>pwindow</th><th>swindow</th><th>obs_time</th><th>observed_delay</th><th>observed_delay_upper</th><th>n</th></tr><tr><td>1</td><td>1</td><td>1</td><td>8</td><td>0.0</td><td>1.0</td><td>1</td></tr><tr><td>2</td><td>1</td><td>1</td><td>8</td><td>1.0</td><td>2.0</td><td>13</td></tr><tr><td>3</td><td>1</td><td>1</td><td>8</td><td>2.0</td><td>3.0</td><td>32</td></tr><tr><td>4</td><td>1</td><td>1</td><td>8</td><td>3.0</td><td>4.0</td><td>29</td></tr><tr><td>5</td><td>1</td><td>1</td><td>8</td><td>4.0</td><td>5.0</td><td>34</td></tr><tr><td>6</td><td>1</td><td>1</td><td>8</td><td>5.0</td><td>6.0</td><td>26</td></tr><tr><td>7</td><td>1</td><td>1</td><td>8</td><td>6.0</td><td>7.0</td><td>19</td></tr><tr><td>8</td><td>1</td><td>1</td><td>8</td><td>7.0</td><td>8.0</td><td>14</td></tr><tr><td>9</td><td>1</td><td>1</td><td>9</td><td>0.0</td><td>1.0</td><td>2</td></tr><tr><td>10</td><td>1</td><td>1</td><td>9</td><td>1.0</td><td>2.0</td><td>5</td></tr><tr><td>...</td></tr><tr><td>80</td><td>2</td><td>2</td><td>10</td><td>8.0</td><td>10.0</td><td>22</td></tr></tbody></table>\n\n\n<div class=\"markdown\"><p>Compare the samples with and without secondary censoring to the true distribution. First let's calculate the empirical CDF:</p></div>\n\n<pre class='language-julia'><code class='language-julia'>empirical_cdf = ecdf(samples)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-empirical_cdf\">ECDF{Vector{Float64}, Weights{Float64, Float64, Vector{Float64}}}([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0], Float64[])</pre>\n\n<pre class='language-julia'><code class='language-julia'>empirical_cdf_obs = ecdf(delay_counts.observed_delay, weights = delay_counts.n)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-empirical_cdf_obs\">ECDF{Vector{Float64}, Weights{Int64, Int64, Vector{Int64}}}([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0], [1, 2, 2, 13, 16, 21, 1, 13, 13, 9  …  9, 10, 9, 13, 17, 15, 12, 22, 8, 7])</pre>\n\n<pre class='language-julia'><code class='language-julia'># Create a sequence of x values for the theoretical CDF\nx_seq = range(minimum(samples), stop = maximum(samples), length = 100)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-x_seq\">0.0:0.09090909090909091:9.0</pre>\n\n<pre class='language-julia'><code class='language-julia'># Calculate theoretical CDF using true log-normal distribution\ntheoretical_cdf = x_seq |&gt; x -&gt; cdf(true_dist, x)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-theoretical_cdf\">100-element Vector{Float64}:\n 0.0\n 1.011597608751049e-7\n 9.643132895117507e-6\n 9.484054524759167e-5\n 0.0004058100212574347\n 0.0011393531997368723\n 0.0024911102275376566\n ⋮\n 0.8052522612515658\n 0.8091156793117527\n 0.8128920005554523\n 0.8165833494282897\n 0.8201917991805499\n 0.8237193727611859</pre>\n\n<pre class='language-julia'><code class='language-julia'>let\n    f = Figure()\n    ax = Axis(f[1, 1],\n        title = \"Comparison of Observed vs Theoretical CDF\",\n        ylabel = \"Cumulative Probability\",\n        xlabel = \"Delay\"\n    )\n    scatter!(\n        ax,\n        x_seq,\n        empirical_cdf_obs,\n        label = \"Empirical CDF\",\n        color = :blue        # linewidth = 2,\n    )\n    lines!(ax, x_seq, theoretical_cdf, label = \"Theoretical CDF\",\n        color = :black, linewidth = 2)\n    vlines!(ax, [mean(samples)], color = :blue, linestyle = :dash,\n        label = \"Empirical mean\", linewidth = 2)\n    vlines!(ax, [mean(true_dist)], linestyle = :dash,\n        label = \"Theoretical mean\", color = :black, linewidth = 2)\n    axislegend(position = :rb)\n\n    f\nend</code></pre>\n<img height=\"450\" src=\"data:image/png;base64, \" style=\"object-fit: contain; height: auto;\" width=\"600\"/>\n\n\n<div class=\"markdown\"><p>We've aggregated the data to unique combinations of <code>pwindow</code>, <code>swindow</code>, and <code>obs_time</code> and counted the number of occurrences of each <code>observed_delay</code> for each combination. This is the data we will use to fit our model.</p></div>\n\n","category":"page"},{"location":"getting-started/tutorials/fitting-dists-with-Turing/#Fitting-a-naive-model-using-Turing","page":"Fitting distributions with PrimaryCensored and Turing","title":"Fitting a naive model using Turing","text":"","category":"section"},{"location":"getting-started/tutorials/fitting-dists-with-Turing/","page":"Fitting distributions with PrimaryCensored and Turing","title":"Fitting distributions with PrimaryCensored and Turing","text":"<div class=\"markdown\">\n<p>We'll start by fitting a naive model using NUTS from <code>Turing</code>. We define the model in the <code>Turing</code> PPL.</p></div>\n\n<pre class='language-julia'><code class='language-julia'>@model function naive_model(N, y, n)\n    mu ~ Normal(1.0, 1.0)\n    sigma ~ truncated(Normal(0.5, 1.0); lower = 0.0)\n    d = LogNormal(mu, sigma)\n\n    for i in eachindex(y)\n        Turing.@addlogprob! n[i] * logpdf(d, y[i])\n    end\nend</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-naive_model\">naive_model (generic function with 2 methods)</pre>\n\n\n<div class=\"markdown\"><p>Now lets instantiate this model with data</p></div>\n\n<pre class='language-julia'><code class='language-julia'>naive_mdl = naive_model(\n    size(delay_counts, 1),\n    delay_counts.observed_delay .+ 1e-6, # Add a small constant to avoid log(0)\n    delay_counts.n)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-naive_mdl\">DynamicPPL.Model{typeof(naive_model), (:N, :y, :n), (), (), Tuple{Int64, Vector{Float64}, Vector{Int64}}, Tuple{}, DynamicPPL.DefaultContext}(naive_model, (N = 80, y = [1.0e-6, 1.000001, 2.000001, 3.000001, 4.000001, 5.000001, 6.000001, 7.000001, 1.0e-6, 1.000001  …  1.0e-6, 2.000001, 4.000001, 6.000001, 8.000001, 1.0e-6, 2.000001, 4.000001, 6.000001, 8.000001], n = [1, 13, 32, 29, 34, 26, 19, 14, 2, 5  …  13, 69, 59, 30, 12, 9, 69, 48, 29, 22]), NamedTuple(), DynamicPPL.DefaultContext())</pre>\n\n\n<div class=\"markdown\"><p>and now let's fit the compiled model.</p></div>\n\n<pre class='language-julia'><code class='language-julia'>naive_fit = sample(naive_mdl, NUTS(), MCMCThreads(), 500, 4)</code></pre>\n<table><tbody><tr><th></th><th>iteration</th><th>chain</th><th>mu</th><th>sigma</th><th>lp</th><th>n_steps</th><th>is_accept</th><th>acceptance_rate</th><th>...</th></tr><tr><td>1</td><td>251</td><td>1</td><td>0.569828</td><td>3.16687</td><td>-6326.42</td><td>3.0</td><td>1.0</td><td>0.889234</td><td></td></tr><tr><td>2</td><td>252</td><td>1</td><td>0.51554</td><td>3.21602</td><td>-6327.17</td><td>3.0</td><td>1.0</td><td>0.748919</td><td></td></tr><tr><td>3</td><td>253</td><td>1</td><td>0.699124</td><td>3.15787</td><td>-6327.72</td><td>7.0</td><td>1.0</td><td>0.895135</td><td></td></tr><tr><td>4</td><td>254</td><td>1</td><td>0.523035</td><td>3.16482</td><td>-6326.8</td><td>3.0</td><td>1.0</td><td>0.728358</td><td></td></tr><tr><td>5</td><td>255</td><td>1</td><td>0.497583</td><td>3.17839</td><td>-6327.16</td><td>3.0</td><td>1.0</td><td>0.840027</td><td></td></tr><tr><td>6</td><td>256</td><td>1</td><td>0.548956</td><td>3.15474</td><td>-6326.61</td><td>3.0</td><td>1.0</td><td>0.792753</td><td></td></tr><tr><td>7</td><td>257</td><td>1</td><td>0.569335</td><td>3.16453</td><td>-6326.43</td><td>3.0</td><td>1.0</td><td>1.0</td><td></td></tr><tr><td>8</td><td>258</td><td>1</td><td>0.606234</td><td>3.2018</td><td>-6326.53</td><td>3.0</td><td>1.0</td><td>0.977859</td><td></td></tr><tr><td>9</td><td>259</td><td>1</td><td>0.530658</td><td>3.17006</td><td>-6326.69</td><td>3.0</td><td>1.0</td><td>0.900204</td><td></td></tr><tr><td>10</td><td>260</td><td>1</td><td>0.627117</td><td>3.11173</td><td>-6327.41</td><td>7.0</td><td>1.0</td><td>0.761508</td><td></td></tr><tr><td>...</td></tr></tbody></table>\n\n<pre class='language-julia'><code class='language-julia'>summarize(naive_fit)</code></pre>\n<table><tbody><tr><th></th><th>parameters</th><th>mean</th><th>std</th><th>mcse</th><th>ess_bulk</th><th>ess_tail</th><th>rhat</th><th>ess_per_sec</th></tr><tr><td>1</td><td>:mu</td><td>0.584129</td><td>0.0704067</td><td>0.00151449</td><td>2153.02</td><td>1487.54</td><td>1.00003</td><td>318.024</td></tr><tr><td>2</td><td>:sigma</td><td>3.17766</td><td>0.0495775</td><td>0.00113542</td><td>1905.04</td><td>1306.94</td><td>1.00127</td><td>281.394</td></tr></tbody></table>\n\n<pre class='language-julia'><code class='language-julia'>let\n    f = pairplot(naive_fit)\n    CairoMakie.vlines!(f[1, 1], [meanlog], linewidth = 3, color = :red)\n    CairoMakie.vlines!(f[2, 2], [sdlog], linewidth = 3, color = :red)\n    CairoMakie.scatter!(f[2, 1], [meanlog], [sdlog], markersize = 10, color = :red)\n    f\nend</code></pre>\n<img height=\"430\" src=\"data:image/png;base64, \" style=\"object-fit: contain; height: auto;\" width=\"416\"/>\n\n\n<div class=\"markdown\"><p>We see that the model has converged and the diagnostics look good. However, just from the model posterior summary we see that we might not be very happy with the fit. <code>mu</code> is smaller than the target 1.5 and <code>sigma</code> is larger than the target 0.75.</p></div>\n\n","category":"page"},{"location":"getting-started/tutorials/fitting-dists-with-Turing/#Fitting-an-improved-model-using-censoring-utilities","page":"Fitting distributions with PrimaryCensored and Turing","title":"Fitting an improved model using censoring utilities","text":"","category":"section"},{"location":"getting-started/tutorials/fitting-dists-with-Turing/","page":"Fitting distributions with PrimaryCensored and Turing","title":"Fitting distributions with PrimaryCensored and Turing","text":"<div class=\"markdown\">\n<p>We'll now fit an improved model by defining our observations as <em>censored</em> using <code>PrimaryCensored.primarycensored</code> to construct censored delay distributions from actual delay distributions (which we sample below as <code>dist</code>) and uniform primary censored windows (which vary across the data).</p><p>In this approach we use the <code>within_interval_logpmf</code> supplied by <code>PrimaryCensored.jl</code>. This function calculates the log-probability of the secondary event occurring in the secondary censoring window conditional on the primary event occurring in the primary censoring window by calculating the increase in the CDF over the secondary window and rescaling by the probability of the secondary event occuring within the maximum observation time <code>D</code>. This accounts for:</p><ul><li><p>The primary and secondary censoring windows, which can vary in length.</p></li><li><p>The effect of right truncation in biasing our observations.</p></li></ul><p>This is the analogous function to <code>primary_censored_dist_lpmf</code> in <a href=\"https://primarycensored.epinowcast.org/stan/primarycensored_8stan.html#a40c8992ec6549888fdd011beddf024b0\"><code>primarycensored</code></a>.</p></div>\n\n\n<div class=\"markdown\"><p>We make a new <code>Turing</code> model that now uses <code>within_interval_logpmf</code> rather than the naive uncensored and untruncated <code>logpdf</code>.</p></div>\n\n<pre class='language-julia'><code class='language-julia'>@model function primarycensoreddist_model(y, y_upper, n, pws, Ds)\n    mu ~ Normal(1.0, 1.0)\n    sigma ~ truncated(Normal(0.5, 0.5); lower = 0.0)\n    dist = LogNormal(mu, sigma)\n\n    for i in eachindex(y)\n        censoreddist = truncated(primarycensored(dist, Uniform(0.0, pws[i])); upper = Ds[i])\n        Turing.@addlogprob! n[i] * within_interval_logpmf(censoreddist, y[i], y_upper[i])\n    end\nend</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-primarycensoreddist_model\">primarycensoreddist_model (generic function with 2 methods)</pre>\n\n\n<div class=\"markdown\"><p>Lets instantiate this model with data</p></div>\n\n<pre class='language-julia'><code class='language-julia'>primarycensoreddist_mdl = primarycensoreddist_model(\n    delay_counts.observed_delay,\n    delay_counts.observed_delay_upper,\n    delay_counts.n,\n    delay_counts.pwindow,\n    delay_counts.obs_time\n)</code></pre>\n<pre class=\"code-output documenter-example-output\" id=\"var-primarycensoreddist_mdl\">DynamicPPL.Model{typeof(primarycensoreddist_model), (:y, :y_upper, :n, :pws, :Ds), (), (), Tuple{Vector{Float64}, Vector{Float64}, Vector{Int64}, Vector{Int64}, Vector{Int64}}, Tuple{}, DynamicPPL.DefaultContext}(primarycensoreddist_model, (y = [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.0, 1.0  …  0.0, 2.0, 4.0, 6.0, 8.0, 0.0, 2.0, 4.0, 6.0, 8.0], y_upper = [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 1.0, 2.0  …  2.0, 4.0, 6.0, 8.0, 10.0, 2.0, 4.0, 6.0, 8.0, 10.0], n = [1, 13, 32, 29, 34, 26, 19, 14, 2, 5  …  13, 69, 59, 30, 12, 9, 69, 48, 29, 22], pws = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1  …  2, 2, 2, 2, 2, 2, 2, 2, 2, 2], Ds = [8, 8, 8, 8, 8, 8, 8, 8, 9, 9  …  9, 9, 9, 9, 9, 10, 10, 10, 10, 10]), NamedTuple(), DynamicPPL.DefaultContext())</pre>\n\n\n<div class=\"markdown\"><p>Now let’s fit the compiled model.</p></div>\n\n<pre class='language-julia'><code class='language-julia'>primarycensoreddist_fit = sample(\n    primarycensoreddist_mdl, NUTS(), MCMCThreads(), 1000, 4)</code></pre>\n<table><tbody><tr><th></th><th>iteration</th><th>chain</th><th>mu</th><th>sigma</th><th>lp</th><th>n_steps</th><th>is_accept</th><th>acceptance_rate</th><th>...</th></tr><tr><td>1</td><td>501</td><td>1</td><td>1.39951</td><td>0.729598</td><td>-3388.88</td><td>3.0</td><td>1.0</td><td>0.998168</td><td></td></tr><tr><td>2</td><td>502</td><td>1</td><td>1.48417</td><td>0.723732</td><td>-3388.67</td><td>5.0</td><td>1.0</td><td>1.0</td><td></td></tr><tr><td>3</td><td>503</td><td>1</td><td>1.44755</td><td>0.714324</td><td>-3387.13</td><td>3.0</td><td>1.0</td><td>0.984933</td><td></td></tr><tr><td>4</td><td>504</td><td>1</td><td>1.41104</td><td>0.740862</td><td>-3388.92</td><td>7.0</td><td>1.0</td><td>0.611479</td><td></td></tr><tr><td>5</td><td>505</td><td>1</td><td>1.46168</td><td>0.741366</td><td>-3386.96</td><td>7.0</td><td>1.0</td><td>0.962406</td><td></td></tr><tr><td>6</td><td>506</td><td>1</td><td>1.45624</td><td>0.73704</td><td>-3386.87</td><td>3.0</td><td>1.0</td><td>0.876524</td><td></td></tr><tr><td>7</td><td>507</td><td>1</td><td>1.43448</td><td>0.723917</td><td>-3386.8</td><td>5.0</td><td>1.0</td><td>0.52247</td><td></td></tr><tr><td>8</td><td>508</td><td>1</td><td>1.45073</td><td>0.728341</td><td>-3386.81</td><td>5.0</td><td>1.0</td><td>0.941999</td><td></td></tr><tr><td>9</td><td>509</td><td>1</td><td>1.41029</td><td>0.704603</td><td>-3387.22</td><td>7.0</td><td>1.0</td><td>0.969505</td><td></td></tr><tr><td>10</td><td>510</td><td>1</td><td>1.40229</td><td>0.707359</td><td>-3387.52</td><td>7.0</td><td>1.0</td><td>0.474772</td><td></td></tr><tr><td>...</td></tr></tbody></table>\n\n<pre class='language-julia'><code class='language-julia'>summarize(primarycensoreddist_fit)</code></pre>\n<table><tbody><tr><th></th><th>parameters</th><th>mean</th><th>std</th><th>mcse</th><th>ess_bulk</th><th>ess_tail</th><th>rhat</th><th>ess_per_sec</th></tr><tr><td>1</td><td>:mu</td><td>1.44695</td><td>0.034649</td><td>0.00100525</td><td>1208.32</td><td>1608.24</td><td>1.00161</td><td>8.18721</td></tr><tr><td>2</td><td>:sigma</td><td>0.729479</td><td>0.0274677</td><td>0.000811206</td><td>1153.84</td><td>1382.01</td><td>1.00183</td><td>7.81808</td></tr></tbody></table>\n\n<pre class='language-julia'><code class='language-julia'>let\n    f = pairplot(primarycensoreddist_fit)\n    CairoMakie.vlines!(f[1, 1], [meanlog], linewidth = 3, color = :red)\n    CairoMakie.vlines!(f[2, 2], [sdlog], linewidth = 3, color = :red)\n    CairoMakie.scatter!(f[2, 1], [meanlog], [sdlog], markersize = 10, color = :red)\n    f\nend</code></pre>\n<img height=\"438\" src=\"data:image/png;base64, \" style=\"object-fit: contain; height: auto;\" width=\"421\"/>\n\n\n<div class=\"markdown\"><p>We see that the model has converged and the diagnostics look good. We also see that the posterior means are very near the true parameters and the 90% credible intervals include the true parameters.</p></div>\n\n<!-- PlutoStaticHTML.End -->","category":"page"},{"location":"getting-started/tutorials/fitting-dists-with-Turing/","page":"Fitting distributions with PrimaryCensored and Turing","title":"Fitting distributions with PrimaryCensored and Turing","text":"EditURL = \"https://github.com/EpiAware/PrimaryCensored.jl/blob/main/docs/src/getting-started/tutorials/fitting-dists-with-Turing.jl\"","category":"page"},{"location":"showcase/#showcase","page":"Overview","title":"PrimaryCensored Showcase","text":"","category":"section"},{"location":"showcase/","page":"Overview","title":"Overview","text":"Here we showcase the capabilities of PrimaryCensored in action. If you have a showcase you would like to add, please submit a pull request.","category":"page"},{"location":"developer/contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"This page details the some of the guidelines that should be followed when contributing to this package. It is adapted from Documenter.jl.","category":"page"},{"location":"developer/contributing/#Branches","page":"Contributing","title":"Branches","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"release-* branches are used for tagged minor versions of this package. This follows the same approach used in the main Julia repository, albeit on a much more modest scale.","category":"page"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Please open pull requests against the master branch rather than any of the release-* branches whenever possible.","category":"page"},{"location":"developer/contributing/#Backports","page":"Contributing","title":"Backports","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Bug fixes are backported to the release-* branches using git cherry-pick -x by a EpiAware member and will become available in point releases of that particular minor version of the package.","category":"page"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Feel free to nominate commits that should be backported by opening an issue. Requests for new point releases to be tagged in METADATA.jl can also be made in the same way.","category":"page"},{"location":"developer/contributing/#release-*-branches","page":"Contributing","title":"release-* branches","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Each new minor version x.y.0 gets a branch called release-x.y (a protected branch).\nNew versions are usually tagged only from the release-x.y branches.\nFor patch releases, changes get backported to the release-x.y branch via a single PR with the standard name \"Backports for x.y.z\" and label \"Type: Backport\". The PR message links to all the PRs that are providing commits to the backport. The PR gets merged as a merge commit (i.e. not squashed).\nThe old release-* branches may be removed once they have outlived their usefulness.\nPatch version milestones are used to keep track of which PRs get backported etc.","category":"page"},{"location":"developer/contributing/#Style-Guide","page":"Contributing","title":"Style Guide","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Follow the style of the surrounding text when making changes. When adding new features please try to stick to the following points whenever applicable. This project follows the SciML style guide.","category":"page"},{"location":"developer/contributing/#Tests","page":"Contributing","title":"Tests","text":"","category":"section"},{"location":"developer/contributing/#Unit-tests","page":"Contributing","title":"Unit tests","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"As is conventional for Julia packages, unit tests are located at test/*.jl with the entrypoint test/runtests.jl.","category":"page"},{"location":"developer/contributing/#End-to-end-testing","page":"Contributing","title":"End to end testing","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Tests that build example package docs from source and inspect the results (end to end tests) are located in /test/examples. The main entry points are test/examples/make.jl for building and test/examples/test.jl for doing some basic checks on the generated outputs.","category":"page"},{"location":"developer/contributing/#Pluto-usage-in-showcase-documentation","page":"Contributing","title":"Pluto usage in showcase documentation","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Some of the showcase examples in PrimaryCensored/docs/src/showcase use Pluto.jl notebooks for the underlying computation. The output of the notebooks is rendered into HTML for inclusion in the documentation in two steps:","category":"page"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"PlutoStaticHTML.jl converts the notebook with output into a machine-readable .md format.\nDocumenter.jl renders the .md file into HTML for inclusion in the documentation during the build process.","category":"page"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"For other examples of using Pluto to generate documentation see the examples shown here.","category":"page"},{"location":"developer/contributing/#Running-Pluto-notebooks-from-PrimaryCensored-locally","page":"Contributing","title":"Running Pluto notebooks from PrimaryCensored locally","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"To run the Pluto.jl scripts in the PrimaryCensored documentation directly from the source code you can do these steps:","category":"page"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Install Pluto.jl locally. We recommend using the version of Pluto that is pinned in the Project.toml file defining the documentation environment.\nClone the PrimaryCensored repository.\nStart Pluto.jl either from REPL (see the Pluto.jl documentation) or from the command line with the shell script PrimaryCensored/docs/pluto-scripts.sh.\nFrom the Pluto.jl interface, navigate to the Pluto.jl script you want to run.","category":"page"},{"location":"developer/contributing/#Contributing-to-Pluto-notebooks-in-PrimaryCensored-documentation","page":"Contributing","title":"Contributing to Pluto notebooks in PrimaryCensored documentation","text":"","category":"section"},{"location":"developer/contributing/#Modifying-an-existing-Pluto-notebook","page":"Contributing","title":"Modifying an existing Pluto notebook","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Committing changes to the Pluto.jl notebooks in the EpiAware documentation is the same as committing changes to any other part of the repository. However, please note that we expect the following features for the environment management of the notebooks:","category":"page"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Use the environment determined by the Project.toml file in the PrimaryCensored/docs directory. If you want extra packages, add them to this environment.\nUse the version of PrimaryCensored that is used in these notebooks to be the version of PrimaryCensored on the branch being pull requested into main. To do this use the Pkg.develop function.","category":"page"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"To do this you can use the following code snippet in the Pluto notebook:","category":"page"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"# Determine the relative path to the `EpiAware/docs` directory\ndocs_dir = dirname(dirname(dirname(dirname(@__DIR__))))\n# Determine the relative path to the `EpiAware` package directory\npkg_dir = dirname(docs_dir)\n\nusing Pkg: Pkg\nPkg.activate(docs_dir)\nPkg.develop(; path = pkg_dir)\nPkg.instantiate()","category":"page"},{"location":"developer/contributing/#Adding-a-new-Pluto-notebook","page":"Contributing","title":"Adding a new Pluto notebook","text":"","category":"section"},{"location":"developer/contributing/","page":"Contributing","title":"Contributing","text":"Adding a new Pluto.jl notebook to the PrimaryCensored documentation is the same as adding any other file to the repository. However, in addition to following the guidelines for modifying an existing notebook, please note that the new notebook is added to the set of notebook builds using build in the PrimaryCensored/docs/make.jl file. This will generate an .md of the same name as the notebook which can be rendered when makedocs is run. For this document to be added to the overall documentation the path to the .md file must be added to the Pages array defined in PrimaryCensored/docs/pages.jl.","category":"page"},{"location":"developer/checklist/#Checklists","page":"Release checklist","title":"Checklists","text":"","category":"section"},{"location":"developer/checklist/","page":"Release checklist","title":"Release checklist","text":"The purpose of this page is to collate a series of checklists for commonly performed changes to the source code of EpiAware. It has been adapted from Documenter.jl.","category":"page"},{"location":"developer/checklist/","page":"Release checklist","title":"Release checklist","text":"In each case, copy the checklist into the description of the pull request.","category":"page"},{"location":"developer/checklist/#Making-a-release","page":"Release checklist","title":"Making a release","text":"","category":"section"},{"location":"developer/checklist/","page":"Release checklist","title":"Release checklist","text":"In preparation for a release, use the following checklist. These steps should be performed on a branch with an open pull request, either for a topic branch, or for a new branch release-1.y.z (\"Release version 1.y.z\") if multiple changes have accumulated on the master branch since the last release.","category":"page"},{"location":"developer/checklist/","page":"Release checklist","title":"Release checklist","text":"## Pre-release\n\n - [ ] Change the version number in `Project.toml`\n   * If the release is breaking, increment MAJOR\n   * If the release adds a new user-visible feature, increment MINOR\n   * Otherwise (bug-fixes, documentation improvements), increment PATCH\n - [ ] Update `CHANGELOG.md`, following the existing style (in particular, make sure that the change log for this version has the correct version number and date).\n - [ ] Run `make changelog`, to make sure that all the issue references in `CHANGELOG.md` are up to date.\n - [ ] Check that the commit messages in this PR do not contain `[ci skip]`\n - [ ] Run https://github.com/JuliaDocs/Documenter.jl/actions/workflows/regression-tests.yml\n       using a `workflow_dispatch` trigger to check for any changes that broke extensions.\n\n## The release\n\n - [ ] After merging the pull request, tag the release. There are two options for this:\n\n   1. [Comment `[at]JuliaRegistrator register` on the GitHub commit.](https://github.com/JuliaRegistries/Registrator.jl#via-the-github-app)\n   2. Use [JuliaHub's package registration feature](https://help.juliahub.com/juliahub/stable/contribute/#registrator) to trigger the registration.\n\n   Either of those should automatically publish a new version to the Julia registry.\n - Once registered, the `TagBot.yml` workflow should create a tag, and rebuild the documentation for this tag.\n - These steps can take quite a bit of time (1 hour or more), so don't be surprised if the new documentation takes a while to appear.","category":"page"},{"location":"overview/#overview","page":"Overview","title":"Overview of the PrimaryCensored","text":"","category":"section"},{"location":"getting-started/tutorials/#Tutorials","page":"Overview","title":"Tutorials","text":"","category":"section"},{"location":"getting-started/tutorials/","page":"Overview","title":"Overview","text":"This section contains tutorials that will help you get started with PrimaryCensored for specific tasks. See the sidebar for the list of tutorials.","category":"page"},{"location":"getting-started/faq/#Frequently-asked-questions","page":"Frequently asked questions","title":"Frequently asked questions","text":"","category":"section"},{"location":"getting-started/faq/","page":"Frequently asked questions","title":"Frequently asked questions","text":"This page contains a list of frequently asked questions about the PrimaryCensored package. If you have a question that is not answered here, please open a discussion on the GitHub repository.","category":"page"},{"location":"getting-started/faq/","page":"Frequently asked questions","title":"Frequently asked questions","text":"Pages = [\"lib/getting-started/faq.md\"]","category":"page"},{"location":"getting-started/faq/#Pluto-notebooks","page":"Frequently asked questions","title":"Pluto notebooks","text":"","category":"section"},{"location":"getting-started/faq/","page":"Frequently asked questions","title":"Frequently asked questions","text":"In some of the showcase examples in PrimaryCensored/docs/src/showcase we use Pluto.jl notebooks for the underlying computation. As well as reading the code blocks and output of the notebooks in this documentation, you can also run these notebooks by cloning PrimaryCensored and running the notebooks with Pluto.jl (for further details see developer notes).","category":"page"},{"location":"getting-started/faq/","page":"Frequently asked questions","title":"Frequently asked questions","text":"It should be noted that Pluto.jl notebooks are reactive, meaning that they re-run downstream code after changes with downstreaming determined by a tree of dependent code blocks. This is different from the standard Julia REPL, and some other notebook formats (e.g. .ipynb). In Pluto each code block is a single lines of code or encapsulated by let ... end and begin ... end. The difference between let ... end blocks and begin ... end blocks are that the let ... end type of code block only adds the final output/return value of the block to scope, like an anonymous function, whereas begin ... end executes each line and adds defined variables to scope.","category":"page"},{"location":"getting-started/faq/","page":"Frequently asked questions","title":"Frequently asked questions","text":"For installation instructions and more information and documentation on Pluto.jl see the Pluto.jl documentation.","category":"page"},{"location":"#PrimaryCensored.jl","page":"PrimaryCensored.jl: Primary event censored distributions","title":"PrimaryCensored.jl","text":"","category":"section"},{"location":"","page":"PrimaryCensored.jl: Primary event censored distributions","title":"PrimaryCensored.jl: Primary event censored distributions","text":"Primary censoring extension for Distributions.jl","category":"page"},{"location":"#Where-to-start","page":"PrimaryCensored.jl: Primary event censored distributions","title":"Where to start","text":"","category":"section"},{"location":"","page":"PrimaryCensored.jl: Primary event censored distributions","title":"PrimaryCensored.jl: Primary event censored distributions","text":"Want to get started running code? Check out the Getting Started Tutorials.\nWhat is PrimaryCensored? Check out our Overview.\nWant to see some end-to-end examples? Check out our PrimaryCensored showcase.\nWant to understand the API? Check out our API Reference.\nWant to chat with someone about PrimaryCensored? Post on our GitHub Discussions.\nWant to contribute to PrimaryCensored? Check out our Developer documentation.\nWant to see our code? Check out our GitHub Repository.","category":"page"}]
}
